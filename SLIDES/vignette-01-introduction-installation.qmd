---
vignette-nb: "01"
title: Introduction to and installation of R
long-title: Vignette 01 - Introduction to and installation of R
description-meta: Julien Arino - R for modellers - Vignette 01 - Introduction to and installation of R
author: Julien Arino
institute: University of Manitoba*
youtube: https://youtu.be/LuGgWC7bues
format: 
  revealjs:
    theme: [night, custom.scss]    
    template-partials:
      - title-slide.html
    toc: true
    toc-depth: 1
    toc-title: Outline
    auto-stretch: true
    progress: false
    preview-liiks: auto
    code-line-numbers: false
    chalkboard: true
---

# Foreword: the R language {.r-fit-text}

---

## [R was originally for stats but is now much more]{.r-fit-text}

- Open source version of S
- Appeared in 1993
- Currently version `{r} rversions::r_versions()$version[dim(rversions::r_versions())[1]]`

```{r install_rversions}
if (!require(rversions)) {
  install.packages("rversions")
  library(rversions)
}
```

```{r show_R_versions, echo=TRUE}
tail(rversions::r_versions(), n = 8)
```

## [R uses a lot of code from other languages]{.r-fit-text}

- One major advantage in my view: uses a lot of C and Fortran code. E.g., [deSolve](https://cran.r-project.org/web/packages/deSolve/index.html):

> The functions provide an interface to the FORTRAN functions 'lsoda', 'lsodar', 'lsode', 'lsodes' of the 'ODEPACK' collection, to the FORTRAN functions 'dvode', 'zvode' and 'daspk' and a C-implementation of solvers of the 'Runge-Kutta' family with fixed or variable time steps

## Lots of people use R

- Very active community on the web, easy to find solutions (same true of Python, I just prefer R)

<br>

- E.g., on Stack Overflow, [questions tagged [r]](https://stackoverflow.com/questions/tagged/r) gives (2024-03) 505,118

<br>

- This also means that ChatGPT or Google Gemini are quite good at answering questions about R

## R is a scripted language

- Interactive

<br>

- Allows you to work in real time
    - Be careful: what is in memory might involve steps not written down in a script
    - If you want to reproduce your steps, it is good to write all the steps down in a script and to test from time to time using the command line; see [Vignette 22](https://julien-arino.github.io/R-for-modellers/SLIDES/vignette-22-R-command-line.html)

## Similar to matlab and Python..

<br>

.. with some differences, of course! Otherwise, where would the fun be? ;)

# Installing R

## The main location - CRAN

<br>

- The [Comprehensive R Archive Network](https://cran.r-project.org/) or CRAN is where to go for all official things R

<br>

- To install, select your OS from the main page

## A note for Linux users

<br>

- Often, the version on your distribution is not the most up to date

<br>

- Instructions are on CRAN about setting things up so you have the latest version. For instance,

  - [Debian](https://cran.r-project.org/bin/linux/debian/#secure-apt)
  - [Ubuntu](https://cran.r-project.org/bin/linux/ubuntu/)

## Development environments

- Terminal version, not very friendly
- Nicer terminal: [radian](https://github.com/randy3k/radian)
- Execute R scripts by using `Rscript name_of_script.R`. Useful to run code in `cron`, for instance
- Integrate into jupyter notebooks and VS code
- Use IDEs:
    - [RStudio](https://posit.co/download/rstudio-desktop/) has become the reference; see [Vignette 02](https://julien-arino.github.io/R-for-modellers/SLIDES/vignette-02-Rstudio-and-friends.html)
    - [RKWard](https://rkward.kde.org/) is useful if you are for instance using an ARM processor (Raspberry Pi, some Chromebooks..)

